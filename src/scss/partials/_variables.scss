/* import font from goole fonts */
@import url('https://fonts.googleapis.com/css?family=Dosis:400,700|Raleway:400,400i,500,500i,700');

/* Color paletter */
$white: rgba(255, 255, 255, 1);
$offWhite: rgba(243, 243, 243, 1);
$yellow: rgba(246, 185, 8, 1);
$lightYellow: rgba(246, 187, 8, 0.60);
$black: rgb(0, 0, 0);
$lightBlack: rgba(59, 59, 59, 1);
$gray: rgba(188, 191, 196, 1);

$link-text-color: $lightBlack;
$link-text-color-hover: $yellow;

$dosis: 'Dosis', sans-serif;
$raleway: 'Raleway', sans-serif;

$default-border-radius: 20px;
$button-border-radius: 50px;

$small: (
  'min-width': 320px,
  'columns': susy-repeat(4),
  'gutters': 1/6,
);

$medium: (
  'min-width': 640px,
  'columns': susy-repeat(12),
  'gutters': 1/6,
);

$large: (
  'min-width': 960px,
  'columns': susy-repeat(12),
  'gutters': 1/6,
);

@mixin susy-at(
  $config,
  $maxWidth: false
) {
  //  parse and normalize any shorthand arguments
  $config: susy-compile($config);

  // build min-and-max queries
  $min: map-get($config, 'min-width');
  $min: if($min, '(min-width: #{$min})', null);  
  $max: if($maxWidth, '(max-width: #{$maxWidth})', null);

  // combine them if we need both
  $and: if($min and $max, '#{$min} and #{$max}', null);
  // or fall back to the value we need…
  $query: $and or $min or $max;

  // apply the results…
  @media #{$query} {
    @include susy-use($config) {
      @content;
    }
  }
}

@mixin susy-use(
  $config
) {
  //  parse and normalize any shorthand arguments
  $config: susy-compile($config);

  // record the global settings -
  // and update the global variable with our new settings
  $global: $susy;
  $susy: map-merge($susy, $config) !global;

  // any content inside this mixin
  // will use the local settings
  @content;

  // return the global variable to its initial value
  $susy: $global !global;
}